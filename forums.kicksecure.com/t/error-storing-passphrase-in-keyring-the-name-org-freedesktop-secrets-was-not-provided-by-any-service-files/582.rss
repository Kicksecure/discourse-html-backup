<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</title>
    <link>https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582</link>
    <description>After booting the ISO -&gt; Xfce desktop -&gt; double click on &quot;17 GB Encrypted&quot; (from a previous installation) -&gt; enter password -&gt; save password permanently.

&gt; Failed to mount &quot;rootfs&quot;

&gt; Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)

https://superuser.com/questions/536433/what-applications-provide-org-freedesktop-secrets-service

Since we&#39;re already installing KeePassXC by default, it might make sense to use KeePassXC as a `org.freedesktop.secrets` provider. Here is a promising looking (untested by me) guide:

https://c3pb.de/blog/keepassxc-secrets-service.html

KeePassXC might be more leightweight than gnome-keyring.

&gt; In KeePassXC, go to `Tools` &gt; `Settings` &gt; `Secret-Service-Integration` and enable `Enable KeepassXC Freedesktop.org Secret Service integration`.

This might be a bit more hard to do for a Linux distribution.

Maybe could be done similar to how it&#39;s done here:

* usability-misc
  * /etc/profile.d/50_default_editor.sh
  * /usr/share/usability-misc/xdg-override/
 
related:

https://github.com/keepassxreboot/keepassxc/issues/6274</description>
    
    <lastBuildDate>Tue, 01 Oct 2024 23:54:00 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <p>I don’t think KeePassXC can be used by default as the secret service provider in its current state without some significant hacks. It almost could, but it’s missing some features needed to get there.</p>
<p>In order to use KeePassXC as a secret service, you have to create a password database and configure it to be used for secret storage. Therefore in order for there to be a working secret service out of the box, there has to be some way to make a database automatically during installation or at user creation time (since each user account on the system needs its own separate database for obvious reasons).</p>
<p>Creating a database automatically is a problem because only specially configured databases can be used for secret storage. One has to specify that the database is usable for secret storage, and which “group” inside the database should be used for the purpose. This configuration is stored <em>in the database</em>. You can’t easily set it by editing a text file like you could with a usual config file. While <code>keepassxc-cli is able to *create* databases, it is not able to edit these in-database configuration options. The </code>db-edit` command it provides appears to only be usable for changing the database’s password, key file, etc.</p>
<p>Without the ability to set which group to use for secret storage in a database, a database will be set by default to not be used for secret storage at all. Thus you can’t make a new database from scratch that is usable for secret storage.</p>
<p>So now for the hacks. What <em>would</em> potentially be possible is to make a properly configured empty database with some sort of default password or key, then ship that database as part of Kicksecure. To avoid everyone having the same authentication data on their database, we could then have a routine that runs on first boot that generates a new key file, binds it to the database, then clears any default authentication data in the database so that only the user’s key file can unlock it. We can then have a script that runs automatically every time Kicksecure is started that launches KeePassXC with this database and key file pair opened automatically.</p>
<p>The main problem I see with this solution is:</p>
<ul>
<li>It’s not elegant <em>at all</em>. It’s hacky.</li>
<li>It literally requires shipping an encrypted binary blob as part of Kicksecure. I mean, yes, it’s one that the user could inspect themselves with sufficient effort but yikes.</li>
<li>It could be insecure. I don’t know how KeePassXC’s internals work, but if it uses a “master key” encrypted by a password or key file, this won’t work at all because then everyone will have the same master key for their secret storage database, which is bad from a security standpoint for obvious reasons.</li>
</ul>
<p>In a perfect world, we’d be able to simply set the database settings from the command line. Then we could create a database automatically, set it as usable for secret storage, specify the root group as the one to use for that purpose, and then set up KeePassXC to auto-launch and auto-unlock the database on boot. The only part that’s really missing for this to work is setting a database as usable for secret storage and setting eht group to be used for that purpose. Perhaps that can be a later contribution to upstream KeePassXC.</p>
<p>In the mean time, an existing “automatic” secret service provider like gnome-keyring will probably do a good enough job.</p>
          <p><a href="https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582/2">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582/2</link>
        <pubDate>Tue, 01 Oct 2024 23:39:09 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-582-2</guid>
        <source url="https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582.rss">Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</source>
      </item>
      <item>
        <title>Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>After booting the ISO → Xfce desktop → double click on “17 GB Encrypted” (from a previous installation) → enter password → save password permanently.</p>
<blockquote>
<p>Failed to mount “rootfs”</p>
</blockquote>
<blockquote>
<p>Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</p>
</blockquote>
<aside class="onebox stackexchange" data-onebox-src="https://superuser.com/questions/536433/what-applications-provide-org-freedesktop-secrets-service">
  <header class="source">

      <a href="https://superuser.com/questions/536433/what-applications-provide-org-freedesktop-secrets-service" target="_blank" rel="noopener">superuser.com</a>
  </header>

  <article class="onebox-body">
      <a href="https://superuser.com/users/190060/lmcanavals" target="_blank" rel="noopener">
    <img alt="lmcanavals" src="https://i.sstatic.net/xIV9d.jpg?s=256" class="thumbnail onebox-avatar" width="256" height="256">
  </a>

<h4>
  <a href="https://superuser.com/questions/536433/what-applications-provide-org-freedesktop-secrets-service" target="_blank" rel="noopener">What applications provide org.freedesktop.secrets.service</a>
</h4>

<div class="tags">
  <strong>password-management, xfce, gnome-keyring</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://superuser.com/users/190060/lmcanavals" target="_blank" rel="noopener">
    lmcanavals
  </a>
  on <a href="https://superuser.com/questions/536433/what-applications-provide-org-freedesktop-secrets-service" target="_blank" rel="noopener">09:17AM - 15 Jan 13 UTC</a>
</div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>Since we’re already installing KeePassXC by default, it might make sense to use KeePassXC as a <code>org.freedesktop.secrets</code> provider. Here is a promising looking (untested by me) guide:</p>
<p><a href="https://c3pb.de/blog/keepassxc-secrets-service.html" class="onebox" target="_blank" rel="noopener">https://c3pb.de/blog/keepassxc-secrets-service.html</a></p>
<p>KeePassXC might be more leightweight than gnome-keyring.</p>
<blockquote>
<p>In KeePassXC, go to <code>Tools</code> &gt; <code>Settings</code> &gt; <code>Secret-Service-Integration</code> and enable <code>Enable KeepassXC Freedesktop.org Secret Service integration</code>.</p>
</blockquote>
<p>This might be a bit more hard to do for a Linux distribution.</p>
<p>Maybe could be done similar to how it’s done here:</p>
<ul>
<li>usability-misc
<ul>
<li>/etc/profile.d/50_default_editor.sh</li>
<li>/usr/share/usability-misc/xdg-override/</li>
</ul>
</li>
</ul>
<p>related:</p>
<aside class="onebox githubissue" data-onebox-src="https://github.com/keepassxreboot/keepassxc/issues/6274">
  <header class="source">

      <a href="https://github.com/keepassxreboot/keepassxc/issues/6274" target="_blank" rel="noopener">github.com/keepassxreboot/keepassxc</a>
  </header>

  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Issue" data-github-private-repo="false">
	  <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/keepassxreboot/keepassxc/issues/6274" target="_blank" rel="noopener">Register as the default Secret Service provider (DBus service)</a>
    </h4>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2021-03-13" data-time="13:27:53" data-timezone="UTC">01:27PM - 13 Mar 21 UTC</span>
      </div>


      <div class="user">
        <a href="https://github.com/raffaem" target="_blank" rel="noopener">
          <img alt="raffaem" src="https://avatars.githubusercontent.com/u/54762742?v=4" class="onebox-avatar-inline" width="20" height="20">
          raffaem
        </a>
      </div>
    </div>

    <div class="labels">
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          new feature
        </span>
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          feature: Secret Service
        </span>
    </div>
  </div>
</div>

  <div class="github-row">
    <p class="github-body-container">In Tools-&gt;Settings-&gt;Secret Service, in the General tab, there should be an optio<span class="show-more-container"><a href="" rel="noopener" class="show-more">…</a></span><span class="excerpt hidden">n to register KeePassXC as systemd default Secret Service provider.

On Ubuntu 20.10 this can be achieved by opening `/usr/share/dbus-1/services/org.freedesktop.secrets.service` and changing

```
Exec=/usr/bin/keepassxc/usr/bin/gnome-keyring-daemon --start --foreground --components=secrets
```

into

```
Exec=/usr/bin/keepassxc
```

We can probably have a backup of the file and if the user de-select the option we restore the backup

## REASON

When an application ask for the Secret Service API on D-Bus, if there is no provider, systemd will open the defaut provider as specified in that service file. On Ubuntu this will default to `gnome-keyring`.

Enabling "KeePassXC freedesktop.org Secret Service integration" does not change this behavior. If KeePassXC is not already opened, at a Secret Service request on D-Bus, `gnome-keyring`, not KeePassXC, will be opened.

For a real use case scenario, see [Maestral#352](https://github.com/SamSchott/maestral/issues/352).

## TEMPORARY WORKAROUND

Open a terminal and run

```sudo sed -i -E 's/Exec=.*/Exec=\/usr\/bin\/keepassxc/g' /usr/share/dbus-1/services/org.freedesktop.secrets.service```</span></p>
  </div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582/1">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582/1</link>
        <pubDate>Sat, 28 Sep 2024 04:15:31 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-582-1</guid>
        <source url="https://forums.kicksecure.com/t/error-storing-passphrase-in-keyring-the-name-org-freedesktop-secrets-was-not-provided-by-any-service-files/582.rss">Error storing passphrase in keyring (The name org.freedesktop.secrets was not provided by any .service files)</source>
      </item>
  </channel>
</rss>
